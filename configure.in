AC_INIT()

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gibbler, 0.1)

AC_CONFIG_MACRO_DIR([m4])

AC_PROG_CXX
AC_PROG_CXXCPP
AC_LANG_CPLUSPLUS

AC_DISABLE_SHARED 
AC_PROG_LIBTOOL
# Shared library are disabled for default
#LT_INIT([disable-shared])

BOOST_REQUIRE([1.36.0])
BOOST_PROGRAM_OPTIONS
BOOST_THREADS

AC_ARG_WITH(moses,
            [AC_HELP_STRING([--with-moses=PATH], [path to Moses toolkit (sparse feature version)])],
            [with_moses=$withval],
            [AC_MSG_ERROR([Uses the --with-moses flag to provide the moses location])]
           )


ac_have_mpi=no
AC_ARG_WITH(mpi,
            AC_HELP_STRING([--with-mpi],
                       [Force compilation with MPI]),
        [ if test $withval != no ; then
            ac_have_mpi=yes
          fi ] )
if test $ac_have_mpi = yes ; then
  AC_PATH_PROG(CXX, mpic++, none)
  if test  $CXX = none ; then
    AC_MSG_ERROR([Cannot locate MPI compiler drivers])
  fi
  BOOST_MPI
  BOOST_SERIALIZATION
  AC_DEFINE(MPI_ENABLED,1,[Define if compiling with MPI.])
  CPPFLAGS="$CPPFLAGS -DMPI_ENABLED"
fi

AM_CONDITIONAL([WITH_THREADS],true)


if test "x$with_moses" != 'xno'
then
  SAVE_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I${with_moses}/moses/src -I${with_moses}/kenlm"

  AC_CHECK_HEADER(StaticData.h,
                  [AC_MSG_NOTICE([Found Moses])],
                  [AC_MSG_ERROR([Cannot find Moses!])])

  MOSES_LDFLAGS="-L\$(with_moses)/kenlm -L$\$(with_moses)/moses/src"
  MOSES_LIBS="-lmoses -lkenlm"
fi



AC_CONFIG_FILES(Makefile src/Makefile)

AC_OUTPUT()
